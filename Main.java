package com.patronus47;

/**
 * Created by Student on 24.05.2016.
 */
public class Main {
    public static void main (String [] args) {
        //переменные - это хранилища данных
        //в java у каждой переменной есть тип
        // Переменные и методы именуются с маленькой буквы
        // Каждая следующее слово в имени - с большой
        // например: int numberOfStudents;
        // классы именуются с большой буквы, а далее аналогично переменным

        int intVar; // это объявление переменной
        intVar = 5; // это инициализация (первое заполнение переменной)
        intVar = 64; // присваивание

        // можно объединять объявление и инициализацию в одну строчку

        double dVar = 3.14;
        // double и float - это дробные типы. float - тоже дробный, но короче (меньше знаков после запятой)
        // float fVar = 3.14;в джава дробные числа по умолчанию считаются double (при такой записи будет выдавать ошибку)
        float fVar = 3.14f; // правильная запись

        dVar = 4; // конструкция не вызывает ошибок. джава приведет значение к типу double (неявное приведение типов)
        // неявное - потому что мы этого не видим
        // Иные примитивные типы (string - не примитивный тип)
        boolean bVar = true;
        //char cVar = 'A'; // это целочисленный тип. можно присвоить и число
        String strVar = "Hello";
        byte byteVar = 23;
        short shorVar = 54;
        long lVar = 3453453;

        char cVar = 65; // java применяется юникод. На самом деле этот тип не символьный, а целочисленный
        //поскольку тип целочисленный, с ним можно выполнять математические операции
        // при выводе на экран появится символ, соответствующий введенному числу
        // зачем это надо - например, для сортировки. Мы не можем сказать, что одна буква больше другой
        // поэтому им присваиваются целочисленные значения.
        // string - это массив символов char, т. е. последовательный набор символов

        int amount = 57435;

        int thousand = amount / 1000;

        int rub = amount % 1000;

        System.out.println(thousand + " тысяч " + rub + " рублей");

        // при конкатенации должна быть хотя бы одна строка
        String result = "" + 5 + 3; // чтение кода происходит слева на права. поэтому когда мы ставим кавычки слева
        // 5 и 3 сложатся как строки и получится 53
        System.out.println(result);

        // явное преобразование типов
        //int a = 4;
        //int b = 3;

        //double x;

        //x = (double) (-b) / a; // это явное преобрезование

        //System.out.println("x = " + x);

        boolean bool1 = true;
        boolean bool2 = false;

        boolean boolResult = bool1 == bool2;
        boolean boolResult2 = bool1 != bool2;
        boolean boolResult3 = !(bool1 == bool2); // ! - это инвертирование ("не")

        // Логическое И / умножение / конъюнкция
        // Возвращает true, если слева true И срава true. В других случаях false
        boolResult = bool1 && bool2;
        // Если слева от логического И false, java забивает на все, что справа, т. к. результат будет false

        // Логическое ИЛИ / сложение / дизъюнкция
        // Возвращает true, если слева true ИЛИ срава true. В других случаях false
        boolResult = bool1 || bool2;
        // если слева от логического ИЛИ true, забиваем на все, что справа, т. к. результат будет true

        // ==, != - применяются как к числам, так и к типу boolean
        // > < <= >= - применяются только к числам
        // !, &&, || - применяются только к типу boolean

        // if (логическое_выражение / условие) {
            // код
            // выполняется, если условие  == true
        // } else { // необязательно писать
            // выполнится, если не выполнится код в if (если условие == false)


//        }
        int a = 1;
        int b = 7;
        int c = 12;

        int min;
        min = a;

        if (min > b){
            min = b;
        }
        if (min > c){
            min = c;
        }
        System.out.println(min);

        //сравнение дробных чисел

        double hundred = 100.0/3 + 100.0/3 + 100.0/3 + 100.0/3 + 100.0/3 + 100.0/3;
        System.out.println(hundred);
        // почему выводится такой результат - потому что в машинах не существует бесконечных чисел
        // машины впринципе не умеют работать с дробными числами. Они умеют работать только с целыми
        // дробные числа машина хранит как два целых числа, между которыми есть точка
        // из-за того, что машинна работает с дробными числами таким образом, возможны погрешности в вычислениях

        // поэтому НЕЛЬЗЯ сравнивать дробные числа
//        if (hundred > 200) { // это неправильно, из-за погрешности поедет логика работы программы
//            System.out.println("добились");

        double eps = 0.0000001;
        if (Math.abs(hundred - 200.0) < eps) {
            System.out.println("считаем, что равны");

        }

        /*
        1) Программа решения квадратных уравнений.
        Коэффициенты a b c вводит пользователь с клавиатуры
        ax^2 + b + c = 0
        Необходимо найти корни уравнения
        * комплексные корни
        2) Есть три целых числа
        вводятся с клавиатуры
        необходимо, чтобы эти числа вывелись в порядке возрастания
        Нельзя: пользоваться массивами, использоваться средствами библиотеки для сортировки
        используются только if else логические операции, дополнительные переменные
         */

    }
}

